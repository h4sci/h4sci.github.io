---
// ThemeToggle.astro
---

<button
  id="theme-toggle"
  type="button"
  class="text-black dark:text-white"
  aria-label="Toggle dark mode"
>
  <!-- Sun icon (visible in dark mode) -->
  <svg
    id="theme-toggle-dark-icon"
    class="hidden w-5 h-5"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      clip-rule="evenodd"></path>
  </svg>
  <!-- Moon icon (visible in light mode) -->
  <svg
    id="theme-toggle-light-icon"
    class="w-5 h-5"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
</button>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById("theme-toggle");
  const darkIcon = document.getElementById("theme-toggle-dark-icon");
  const lightIcon = document.getElementById("theme-toggle-light-icon");

  // Check for saved theme preference or default to system preference
  const getTheme = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme");
    }
    return null;
  };

  const setTheme = (theme: string) => {
    if (typeof localStorage !== "undefined") {
      localStorage.setItem("theme", theme);
    }
  };

  // Set initial theme
  const initTheme = () => {
    const savedTheme = getTheme();
    const systemPrefersDark = window.matchMedia(
      "(prefers-color-scheme: dark)"
    ).matches;

    if (savedTheme === "dark" || (!savedTheme && systemPrefersDark)) {
      document.documentElement.classList.add("dark");
      lightIcon?.classList.add("hidden");
      darkIcon?.classList.remove("hidden");
    } else {
      document.documentElement.classList.remove("dark");
      lightIcon?.classList.remove("hidden");
      darkIcon?.classList.add("hidden");
    }
  };

  // Toggle theme
  const toggleTheme = () => {
    const isDark = document.documentElement.classList.contains("dark");

    if (isDark) {
      document.documentElement.classList.remove("dark");
      setTheme("light");
      lightIcon?.classList.remove("hidden");
      darkIcon?.classList.add("hidden");
    } else {
      document.documentElement.classList.add("dark");
      setTheme("dark");
      lightIcon?.classList.add("hidden");
      darkIcon?.classList.remove("hidden");
    }
  };

  // Initialize theme on page load
  initTheme();

  // Add click event listener
  themeToggle?.addEventListener("click", toggleTheme);
</script>
